services:
  backend:
    build: ./backend
    restart: unless-stopped
    expose:
      - "8000"
    volumes:
      - ./backend:/app/
      - django_static:/app/staticfiles
    env_file:
      - .env
    networks:
      - internal
    depends_on:
      - database

  frontend:
    build: ./frontend
    restart: unless-stopped
    expose:
      - "3000"
    volumes:
      - ./frontend:/app/
    networks:
      - internal
    depends_on:
      - backend

  caddy:
    image: caddy:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./proxy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
      - django_static:/srv/staticfiles
    networks:
      - internal
    depends_on:
      - backend
      - frontend

  database:
    image: postgres:13
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - internal
    env_file:
      - .env

networks:
  internal:
    driver: bridge

volumes:
  postgres_data:
  caddy_data:
  caddy_config:
  django_static:
