services:
  proxy:
    image: caddy:2.10.0-alpine
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./apps/caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - transcendance

  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend.dockerfile
    container_name: frontend
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - transcendance

  backend:
    build:
      context: .
      dockerfile: ./docker/backend.dockerfile
    container_name: backend
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - transcendance
    volumes:
      - backend_data:/app/data
    depends_on:
      init-db:
        condition: service_completed_successfully

  init-db:
    build:
      context: .
      dockerfile: ./docker/init-db.dockerfile
    container_name: init-db
    restart: "no"
    networks:
      - transcendance
    volumes:
      - backend_data:/app/data
    env_file:
      - .env

volumes:
  caddy_data:
  caddy_config:
  backend_data:


networks:
  transcendance:
    driver: bridge
